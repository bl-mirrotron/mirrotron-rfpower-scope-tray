[
    {
        "id": "85e21fcb925ef32f",
        "type": "tab",
        "label": "mirrotron-rfpower-scope-tray",
        "disabled": false,
        "info": ""
    },
    {
        "id": "24d6701c4857e25e",
        "type": "group",
        "z": "85e21fcb925ef32f",
        "name": "Edit Me",
        "style": {
            "stroke": "#001f60",
            "fill": "#9363b7",
            "label": true,
            "label-position": "n",
            "color": "#ffff00"
        },
        "nodes": [
            "fcc98447c16c3949"
        ],
        "x": 94,
        "y": 331.5,
        "w": 212,
        "h": 97
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Mirrotron-RF-Power-Scope",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "79250bf3.365cc4",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "67d6e9be.8270f8",
        "type": "ui_group",
        "name": "Scope Trace",
        "tab": "7c22f36f.fb7a4c",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c22f36f.fb7a4c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save tray config in Memory",
        "func": "msg.payload.watchdog.value = 0;\nglobal.set('tray', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 60,
        "wires": [
            [
                "ebb5481bd4277b24"
            ]
        ]
    },
    {
        "id": "5023092b.a0fe38",
        "type": "mqtt in",
        "z": "85e21fcb925ef32f",
        "name": "Subscribe Settings",
        "topic": "$(MQTTSUBSCRIBE)",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 200,
        "wires": [
            [
                "f812bb6a.1aec68"
            ]
        ]
    },
    {
        "id": "49c7b59e.00e86c",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "read Tray",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "readTraydesc",
        "payload": "MQTTSUBSCRIBE",
        "payloadType": "env",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "f7b2b73c.569598"
            ]
        ]
    },
    {
        "id": "4a8d91e8.fcb68",
        "type": "file in",
        "z": "85e21fcb925ef32f",
        "name": "Read tray config",
        "filename": "tray.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 480,
        "y": 60,
        "wires": [
            [
                "4b0be623.7f7b88"
            ]
        ]
    },
    {
        "id": "4b0be623.7f7b88",
        "type": "json",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 60,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "f7b2b73c.569598",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Init flow Variables",
        "func": "var mqttSplit = msg.payload.split('/');\nvar trayProps = {\n    box         :   mqttSplit[0],\n    type        :   mqttSplit[2],\n    name        :   mqttSplit[3],\n};\nglobal.set('trayProps',trayProps);\nglobal.set('settingInProgress', false);\n//init values incase phase det and timing module are not ready\nglobal.set('timing',{\"type\":\"timing\",\"name\":\"01\",\"arcPeriod\":60000,\"timeStamp\":1646408271939,\"watchdog\":{\"action\":\"reading\",\"type\":\"scalar\",\"value\":9834,\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":0,\"high\":40000,\"hihi\":50000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}}},\"clr\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":2,\"hihi\":2},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0},\"on0\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":2,\"hihi\":2},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":1},\"on1\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":2,\"hihi\":2},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0},\"on2\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":2,\"hihi\":2},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0},\"on3\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":2,\"hihi\":2},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0},\"countMax\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":100000},\"start0\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":1000},\"stop0\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":2000},\"start1\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":1000},\"stop1\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":2000},\"start2\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":1000},\"stop2\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":2000},\"start3\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":1000},\"stop3\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":10,\"low\":11,\"high\":15000000,\"hihi\":16000000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":2000}});\nglobal.set('phase-detector',{\"type\":\"phase-detector\",\"name\":\"01\",\"arcPeriod\":60000,\"timeStamp\":1646408271939,\"watchdog\":{\"action\":\"reading\",\"type\":\"scalar\",\"value\":9839,\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":0,\"high\":40000,\"hihi\":50000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}}},\"clr\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":2,\"hihi\":2},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0},\"clrFb\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":2,\"hihi\":2},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0},\"phaseLPFShift\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":1,\"low\":2,\"high\":14,\"hihi\":15},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":10},\"phaseTarget\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"degrees\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-181,\"low\":-181,\"high\":181,\"hihi\":181},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":133},\"sampleTime\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"uS\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":1,\"low\":1,\"high\":1000,\"hihi\":1000},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":500},\"loadClkDelay\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":1,\"low\":1,\"high\":20,\"hihi\":20},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":10},\"fbMult\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":1,\"hihi\":1},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0.2},\"fbShiftL\":{\"action\":\"setting\",\"type\":\"scalar\",\"unit\":\"\",\"alarm\":{\"value\":0,\"limits\":{\"lolo\":-1,\"low\":-1,\"high\":10,\"hihi\":10},\"notify\":{\"name\":\"\",\"number\":\"\",\"time\":0}},\"value\":0}});\nreturn {topic: 'readFile', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "4a8d91e8.fcb68"
            ]
        ]
    },
    {
        "id": "168ce872.83d788",
        "type": "file",
        "z": "85e21fcb925ef32f",
        "name": "Init Settings",
        "filename": "tray.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1290,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "89892a30.598e28",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save Settings to File",
        "func": "var trayCopy = JSON.parse(JSON.stringify(global.get('tray')));\ntrayCopy.mVec.value = [[],[]];\ntrayCopy.iVec.value = [[],[]];\ntrayCopy.qVec.value = [[],[]];\nvar jsonPretty = JSON.stringify(trayCopy,null,2);\nreturn {topic: msg.payload, payload:jsonPretty};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 420,
        "wires": [
            [
                "168ce872.83d788"
            ]
        ]
    },
    {
        "id": "f812bb6a.1aec68",
        "type": "json",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "e0d2b8e49c2e469b"
            ]
        ]
    },
    {
        "id": "c0939e4a.6386f",
        "type": "exec",
        "z": "85e21fcb925ef32f",
        "command": "pm2 restart ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart",
        "x": 720,
        "y": 1480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9e290594.69c548",
        "type": "switch",
        "z": "85e21fcb925ef32f",
        "name": "Reset Tray",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 1500,
        "wires": [
            [
                "985cd59b3e414efe"
            ],
            [
                "236a8168.66f7fe"
            ]
        ]
    },
    {
        "id": "236a8168.66f7fe",
        "type": "exec",
        "z": "85e21fcb925ef32f",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reboot",
        "x": 520,
        "y": 1540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "557e4f40.b904e",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 1500,
        "wires": [
            [
                "9e290594.69c548"
            ]
        ]
    },
    {
        "id": "5152879001ec63ea",
        "type": "mqtt out",
        "z": "85e21fcb925ef32f",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 1250,
        "y": 340,
        "wires": []
    },
    {
        "id": "99fbe8135d0ce161",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Readings Alarm Scan",
        "func": "var newData = msg.payload;\nvar tray = global.get('tray');\nvar alarmFlagReading = scalarAlarmScan(tray, 'reading');\nvar alarmFlagSetting = scalarAlarmScan(tray, 'setting');\nvar newMsg   = null;\nvar alarmMsg = null;\nvar newSettingMsg = null;\nif (alarmFlagReading || alarmFlagSetting)\n{\n    alarmMsg = \n    {\n        topic: 'alarm',\n        payload: true\n    }\n}\nif (msg.topic == 'newSetting')\n{\n    newSettingMsg = \n    {\n        topic: 'newSetting',\n        payload: true\n    }\n};\nif (newData)\n{\n    newMsg = \n    {\n        topic: 'newData',\n        payload: true\n    }\n}\nif (alarmMsg != null ) newMsg = null;\nreturn [newMsg, newSettingMsg, alarmMsg];\n\nfunction getActionArray(tray, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(tray);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (tray[keys[ii]].hasOwnProperty('type'))\n        {\n            if (tray[keys[ii]].type == type)\n            {\n                if (tray[keys[ii]].action == actionType)\n                {\n                    actionArray.push(tray[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(tray, actionType)\n{\n    var alarmFlag = false;\n    var actionArray = getActionArray(tray, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            let oldAlarmValue = actionArray[ii].alarm.value;\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n                if (actionArray[ii].alarm.value != oldAlarmValue) alarmFlag = true;\n            }\n        }\n    }\n    return alarmFlag;\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastAlarm', -1);",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 980,
        "wires": [
            [
                "f5d0568e288098ed"
            ],
            [
                "9f8c3b4630e734a3"
            ],
            [
                "e490045da57dbc44"
            ]
        ]
    },
    {
        "id": "4493527757138cdc",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "New Setting In",
        "links": [
            "4bddb9a0e424ebf4"
        ],
        "x": 755,
        "y": 140,
        "wires": []
    },
    {
        "id": "4bddb9a0e424ebf4",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "blinkybus setting in",
        "links": [
            "4493527757138cdc"
        ],
        "x": 55,
        "y": 380,
        "wires": [
            [
                "fcc98447c16c3949"
            ]
        ]
    },
    {
        "id": "f9be9054ce456982",
        "type": "switch",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "4493527757138cdc"
            ],
            [
                "91cded1b31446957"
            ],
            [
                "c81b72b9290d1c36"
            ],
            [
                "72b5ca0e2043aba0"
            ]
        ]
    },
    {
        "id": "e0d2b8e49c2e469b",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Filter MQTT",
        "func": "return {topic:msg.topic.split('/')[5], payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 200,
        "wires": [
            [
                "f9be9054ce456982"
            ]
        ]
    },
    {
        "id": "f75b9887786b11c4",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Publish tray",
        "func": "if (!msg.payload) return null;\nvar tray = global.get('tray');\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/tray/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/reading',\n    payload: JSON.stringify(tray)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "5152879001ec63ea"
            ]
        ]
    },
    {
        "id": "45a97566b65c65cc",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Publish Tray In",
        "links": [
            "0bf699584a2609d5",
            "1e34df4b19ff22cc",
            "6af21e76e0c4ad80",
            "86aff585d6d97f09",
            "91cded1b31446957",
            "a66ef2e5b482662a",
            "df03212a7e41deb1",
            "f0c1e263384a520f",
            "f5d0568e288098ed",
            "3fc0261f194a7067",
            "396e4a58f43bbdef"
        ],
        "x": 955,
        "y": 340,
        "wires": [
            [
                "f75b9887786b11c4"
            ]
        ]
    },
    {
        "id": "f5d0568e288098ed",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Alarm Scan out",
        "links": [
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 1175,
        "y": 940,
        "wires": []
    },
    {
        "id": "91cded1b31446957",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Ping Out",
        "links": [
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 755,
        "y": 180,
        "wires": []
    },
    {
        "id": "a66ef2e5b482662a",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Create Setting out",
        "links": [
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 355,
        "y": 380,
        "wires": []
    },
    {
        "id": "c81b72b9290d1c36",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Config Out",
        "links": [
            "720ccfb4b4949146"
        ],
        "x": 755,
        "y": 220,
        "wires": []
    },
    {
        "id": "720ccfb4b4949146",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Pause Tray Readings in",
        "links": [
            "c81b72b9290d1c36"
        ],
        "x": 55,
        "y": 520,
        "wires": [
            [
                "b82f13a5e04e195a"
            ]
        ]
    },
    {
        "id": "47de6287cc26419f",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save config file",
        "func": "let cubeAlarm = global.get('tray')[msg.payload.cube].alarm;\ncubeAlarm.limits.lolo = msg.payload.limits.lolo;\ncubeAlarm.limits.low  = msg.payload.limits.low;\ncubeAlarm.limits.high = msg.payload.limits.high;\ncubeAlarm.limits.hihi = msg.payload.limits.hihi;\ncubeAlarm.notify.name = msg.payload.notify.name;\ncubeAlarm.notify.number = msg.payload.notify.number;\nreturn {topic:'trayConfigCompleted', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 520,
        "wires": [
            [
                "eec56d72bdbd1430",
                "501090a1fd5f88f5"
            ]
        ]
    },
    {
        "id": "2cd296fd87868cea",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Continue Tray readings",
        "func": "global.set('settingInProgress',false)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 520,
        "wires": [
            [
                "df03212a7e41deb1"
            ]
        ]
    },
    {
        "id": "04d132d87ffeb91a",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Save Settings to file in",
        "links": [
            "6af21e76e0c4ad80",
            "501090a1fd5f88f5",
            "1e34df4b19ff22cc",
            "75aab98047eea696",
            "344a2a68c26672b2",
            "9f8c3b4630e734a3"
        ],
        "x": 955,
        "y": 420,
        "wires": [
            [
                "89892a30.598e28"
            ]
        ]
    },
    {
        "id": "df03212a7e41deb1",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Continue Devie Readings out",
        "links": [
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 1015,
        "y": 520,
        "wires": []
    },
    {
        "id": "c2d22bcc1f4cf7b0",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "Archive clock",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "archiveClock",
        "payloadType": "date",
        "x": 140,
        "y": 640,
        "wires": [
            [
                "6a9b2f2af2f7d084"
            ]
        ]
    },
    {
        "id": "6a9b2f2af2f7d084",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Archive Pulse",
        "func": "var tray = global.get('tray');\nvar lastArchive = context.get('lastArchive');\nvar now = new Date().getTime();\nif ((now - lastArchive) <= tray.arcPeriod) return null;\ncontext.set('lastArchive', now);\nreturn {topic:'archivePulse', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastArchive', new Date().getTime());",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "d74e019a27b1a659"
            ]
        ]
    },
    {
        "id": "72b5ca0e2043aba0",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Reset Out",
        "links": [
            "6c366c9b4d8b8f19"
        ],
        "x": 755,
        "y": 260,
        "wires": []
    },
    {
        "id": "6c366c9b4d8b8f19",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Reset in",
        "links": [
            "72b5ca0e2043aba0"
        ],
        "x": 75,
        "y": 1500,
        "wires": [
            [
                "557e4f40.b904e"
            ]
        ]
    },
    {
        "id": "1e34df4b19ff22cc",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "nonBlinkybusSetting Out",
        "mode": "link",
        "links": [
            "04d132d87ffeb91a",
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d",
            "996414e175b47253"
        ],
        "x": 355,
        "y": 420,
        "wires": []
    },
    {
        "id": "6af76a294daa96eb",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save flow env variables",
        "func": "global.set(msg.topic,msg.payload);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1360,
        "wires": []
    },
    {
        "id": "aa428318895690ee",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Init device setting in",
        "mode": "link",
        "links": [
            "996414e175b47253"
        ],
        "x": 1155,
        "y": 60,
        "wires": []
    },
    {
        "id": "93758a55568a2f76",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Tray Setting In",
        "mode": "link",
        "links": [
            "b0f91914917b2de1"
        ],
        "x": 515,
        "y": 340,
        "wires": []
    },
    {
        "id": "ebb5481bd4277b24",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 60,
        "wires": [
            [
                "aa428318895690ee"
            ]
        ]
    },
    {
        "id": "10e54acd6f4f5fb4",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "pm2Name",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "pm2Name",
        "payload": "PM2NAME",
        "payloadType": "env",
        "x": 150,
        "y": 1360,
        "wires": [
            [
                "6af76a294daa96eb"
            ]
        ]
    },
    {
        "id": "985cd59b3e414efe",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Get pm2Name",
        "func": "msg.payload = global.get(\"pm2Name\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1480,
        "wires": [
            [
                "c0939e4a.6386f"
            ]
        ]
    },
    {
        "id": "fd6a29d4dda908dd",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "Archive now",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "archiveNow",
        "payloadType": "date",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "76d6712bed883108"
            ]
        ]
    },
    {
        "id": "76d6712bed883108",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Single Archive Pulse",
        "func": "return {topic:'archivePulse', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastArchive', new Date().getTime());",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 700,
        "wires": [
            [
                "d74e019a27b1a659"
            ]
        ]
    },
    {
        "id": "7c54db38ef42ea17",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "project",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "x": 140,
        "y": 1420,
        "wires": [
            [
                "df7945d1e609440c"
            ]
        ]
    },
    {
        "id": "df7945d1e609440c",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save global env variables",
        "func": "global.set(msg.topic,msg.payload);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1420,
        "wires": []
    },
    {
        "id": "501090a1fd5f88f5",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Save config file out",
        "links": [
            "04d132d87ffeb91a"
        ],
        "x": 715,
        "y": 480,
        "wires": []
    },
    {
        "id": "3744a97333f32473",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "93758a55568a2f76"
            ]
        ]
    },
    {
        "id": "eec56d72bdbd1430",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "2cd296fd87868cea"
            ]
        ]
    },
    {
        "id": "95bf73e1f0d68181",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "47de6287cc26419f"
            ]
        ]
    },
    {
        "id": "b82f13a5e04e195a",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Pause Readings",
        "func": "global.set('settingInProgress',true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 520,
        "wires": [
            [
                "95bf73e1f0d68181"
            ]
        ]
    },
    {
        "id": "45409b1230e854cd",
        "type": "mqtt out",
        "z": "85e21fcb925ef32f",
        "name": "Publish Archive",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 760,
        "y": 640,
        "wires": []
    },
    {
        "id": "d74e019a27b1a659",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Publish tray",
        "func": "if (!msg.payload) return null;\nvar trayCopy = JSON.parse(JSON.stringify(global.get('tray')));\ntrayCopy.fVec.value = [[],[]];\ntrayCopy.rVec.value = [[],[]];\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/tray/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/archive',\n    payload: JSON.stringify(trayCopy)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 640,
        "wires": [
            [
                "45409b1230e854cd"
            ]
        ]
    },
    {
        "id": "fcc98447c16c3949",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "g": "24d6701c4857e25e",
        "name": "Create Setting",
        "func": "var tray = global.get('tray');\nvar blinkyBusSettingMsg = \n{\n    topic : msg.topic, \n    payload : { value: msg.payload.value,  'address': -1  } \n}\nvar blinkyBusMessage = false;\nswitch(msg.payload.cube)\n{\n    case 'loopDelay':\n        tray.loopDelay.value  = msg.payload.value;\n        blinkyBusMessage = false;\n        break;\n    case 'preTrigger':\n        tray.preTrigger.value  = msg.payload.value;\n        blinkyBusMessage = false;\n        break;\n    case 'decimationPower':\n        tray.decimationPower.value  = msg.payload.value;\n        blinkyBusMessage = false;\n        break;\n    case 'recordLengthPower':\n        tray.recordLengthPower.value  = msg.payload.value;\n        blinkyBusMessage = false;\n        break;\n    default:\n        break;\n}\nvar msgArray = [null,null,null];\nif (blinkyBusMessage)\n{\n    global.set('settingInProgress',true);\n    var settingInProgressMsg = {topic:'settingInProgress', payload:true};\n    msgArray = [blinkyBusSettingMsg, settingInProgressMsg, null];\n    \n}\nelse\n{\n    global.set('settingInProgress',false);\n    msgArray = [null,null,{topic:'settingDone', payload:true}];\n}\nreturn msgArray;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 380,
        "wires": [
            [
                "3744a97333f32473"
            ],
            [
                "a66ef2e5b482662a"
            ],
            [
                "1e34df4b19ff22cc"
            ]
        ]
    },
    {
        "id": "e490045da57dbc44",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Alarm changed",
        "func": "if (!msg.payload) return null;\nvar tray = global.get('tray');\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/reading',\n    payload: JSON.stringify(tray)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1020,
        "wires": [
            [
                "e067291cdd1fd9f4"
            ]
        ]
    },
    {
        "id": "e067291cdd1fd9f4",
        "type": "mqtt out",
        "z": "85e21fcb925ef32f",
        "name": "QoS = 1",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 1400,
        "y": 1020,
        "wires": []
    },
    {
        "id": "9f8c3b4630e734a3",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "New Setting Out",
        "mode": "link",
        "links": [
            "04d132d87ffeb91a"
        ],
        "x": 1175,
        "y": 980,
        "wires": []
    },
    {
        "id": "78d4bbde71dfd104",
        "type": "exec",
        "z": "85e21fcb925ef32f",
        "command": "python3 readRedPitaya.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 560,
        "y": 1020,
        "wires": [
            [
                "c3db248fb7247829"
            ],
            [
                "4533f88f0f7a7562"
            ],
            []
        ]
    },
    {
        "id": "26de2c540c544d28",
        "type": "ui_chart",
        "z": "85e21fcb925ef32f",
        "name": "I-Q Plot",
        "group": "67d6e9be.8270f8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Power Plot",
        "chartType": "line",
        "legend": "true",
        "xformat": "x",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1024",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 980,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "2eedabc6fe944e61",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Kill redPitayaProcess",
        "func": "var process = flow.get('redPitayaProcess');\nvar newMsg = null;\nif (process.fill != 'blue') return  null;\nif (process.pid != undefined)\n{\n    var pid = Number(process.pid.substring(4));\n    newMsg = {topic:'killProcess',payload:pid}\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 840,
        "wires": [
            [
                "90cdb42592df25fa"
            ]
        ]
    },
    {
        "id": "90cdb42592df25fa",
        "type": "exec",
        "z": "85e21fcb925ef32f",
        "command": "kill -9 ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 590,
        "y": 840,
        "wires": [
            [],
            [
                "4533f88f0f7a7562"
            ],
            []
        ]
    },
    {
        "id": "996414e175b47253",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "start RedPitaya",
        "links": [
            "aa428318895690ee",
            "1e34df4b19ff22cc"
        ],
        "x": 55,
        "y": 900,
        "wires": [
            [
                "6c2eb7d3775d95c9",
                "dfab1f40ae1248e3"
            ]
        ]
    },
    {
        "id": "6c2eb7d3775d95c9",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 170,
        "y": 900,
        "wires": [
            [
                "2eedabc6fe944e61",
                "93974811ab23be65"
            ]
        ]
    },
    {
        "id": "93974811ab23be65",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 360,
        "y": 900,
        "wires": [
            [
                "d9ce5f12481f05cb"
            ]
        ]
    },
    {
        "id": "c3db248fb7247829",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Read Traces",
        "func": "var tray = global.get('tray');\nvar traceF = [];\nvar traceR = [];\nvar traceT = [];\nvar redPitayaParams = global.get(\"redPitayaParams\");\nvar timingTray = global.get('timing');\n\nvar dataView = new DataView(new ArrayBuffer(2));\nvar ndataPts = msg.payload.length / 4;\nfor (var irow = 0; irow < ndataPts; ++irow)\n{\n    dataView.setUint8(1, msg.payload[irow * 2]);\n    dataView.setUint8(0, msg.payload[irow * 2 + 1]);\n    traceF[irow] = dataView.getInt16(0 , true);\n    dataView.setUint8(1, msg.payload[(irow + ndataPts) * 2]);\n    dataView.setUint8(0, msg.payload[(irow + ndataPts) * 2 + 1]);\n    traceR[irow] = dataView.getInt16(0 , true);\n    traceF[irow] = Math.round(4.238* 100000 * traceF[irow] / 32767) / 100;\n    traceR[irow] = Math.round(4.238* 100000 * traceR[irow] / 32767) / 100;\n    traceF[irow] = (traceF[irow] / 1000.0) + 14.5 * (traceF[irow] / 1000.0) * (traceF[irow] / 1000.0);\n    traceR[irow] = (traceR[irow] / 1000.0) + 14.5 * (traceR[irow] / 1000.0) * (traceR[irow] / 1000.0);\n    traceF[irow] = traceF[irow] * 31.622 * 1.0253;\n    traceR[irow] = traceR[irow] * 31.622 * 1.0253;\n    traceT[irow] = (Math.round(10 * (irow - redPitayaParams.pretrigPts) * redPitayaParams.decimation / redPitayaParams.sampleRate) / 10) + timingTray.startGate4.value;\n    \n}\nvar icenter = Math.round(0.5 * (timingTray.stopGate4.value - timingTray.startGate4.value) * redPitayaParams.sampleRate / redPitayaParams.decimation) + redPitayaParams.pretrigPts;\nlet ispan2 = Math.ceil(icenter / 10);\nlet ncnt = 0;\ntray.forward.value = 0;\ntray.reverse.value = 0;\nfor (let ii = (icenter - ispan2); ii < (icenter +  ispan2); ++ii)\n{\n    tray.forward.value = traceF[ii] + tray.forward.value;\n    tray.reverse.value = traceR[ii] + tray.reverse.value;\n    ncnt = ncnt + 1;\n}\ntray.forward.value = Math.round(1000 * tray.forward.value / ncnt) / 1000;\ntray.reverse.value = Math.round(1000 * tray.reverse.value / ncnt) / 1000;\ntray.watchdog.value = tray.watchdog.value + 1;\nif ( tray.watchdog.value > 32760 ) tray.watchdog.value = 0;\ntray.fVec.value = [traceT,traceF];\ntray.rVec.value = [traceT,traceR];\nvar iqDataChart = [\n    {\n        series : [\"TraceF\", \"TraceR\",],\n        data   : [[],[]],\n        labels : [\"\"]\n    }\n];\nfor (var irow = 0; irow < traceF.length; ++irow)\n{\n    iqDataChart[0].data[0][irow] = {\"x\":traceT[irow],\"y\":traceF[irow]};\n    iqDataChart[0].data[1][irow] = {\"x\":traceT[irow],\"y\":traceR[irow]};\n}\niqDataMsg = {topic:'iqDataMsg',payload: iqDataChart};\nreturn [{topic : \"newData\",payload:true},iqDataMsg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1020,
        "wires": [
            [
                "99fbe8135d0ce161"
            ],
            [
                "26de2c540c544d28"
            ]
        ]
    },
    {
        "id": "4533f88f0f7a7562",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "redPitayaProcess Err",
        "func": "node.warn(msg.payload);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 900,
        "wires": []
    },
    {
        "id": "0d1d0894bebf4993",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "2eedabc6fe944e61"
            ]
        ]
    },
    {
        "id": "e2d84bc598cff2e3",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1020,
        "wires": [
            [
                "d9ce5f12481f05cb"
            ]
        ]
    },
    {
        "id": "eb48e395afa18c53",
        "type": "status",
        "z": "85e21fcb925ef32f",
        "name": "",
        "scope": [
            "78d4bbde71dfd104"
        ],
        "x": 100,
        "y": 780,
        "wires": [
            [
                "2525dce4d5ccf892"
            ]
        ]
    },
    {
        "id": "2525dce4d5ccf892",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Get redPitayaProcess",
        "func": "var newMsg = {fill: msg.status.fill, pid:msg.status.text}\nflow.set('redPitayaProcess', newMsg);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 780,
        "wires": []
    },
    {
        "id": "d9ce5f12481f05cb",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Red Pitaya Params",
        "func": "let tray = global.get('tray');\nlet decimation = twoToTheN(tray.decimationPower.value);\nlet recordLength = twoToTheN(tray.recordLengthPower.value);\nlet pretrigPts = Math.floor(tray.preTrigger.value * tray.sampleRate.value / decimation);\nvar redPitayaParams = \n{\n    loopDelay       : tray.loopDelay.value,\n    pretrigPts      : pretrigPts,\n    decimation      : decimation,\n    recordLength    : recordLength,\n    sampleRate      : tray.sampleRate.value\n}\nglobal.set(\"redPitayaParams\", redPitayaParams);\nvar redPitayaArgs = \"\";\nredPitayaArgs = redPitayaArgs + \" -ld \" + redPitayaParams.loopDelay.toString();\nredPitayaArgs = redPitayaArgs + \" -td \" + (8196 - redPitayaParams.pretrigPts - 4).toString();\nredPitayaArgs = redPitayaArgs + \" -dm \" + redPitayaParams.decimation.toString();\nredPitayaArgs = redPitayaArgs + \" -rl \" + redPitayaParams.recordLength.toString();\n\nreturn {topic: \"redPitayaParams\", payload:redPitayaArgs};\nfunction twoToTheN(npower)\n{\n    let ttn = 1\n    for (let ii = 0; ii < npower; ++ii) ttn = ttn * 2;\n    return ttn;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "78d4bbde71dfd104"
            ]
        ]
    },
    {
        "id": "b2779abf14b48c0c",
        "type": "mqtt in",
        "z": "85e21fcb925ef32f",
        "name": "",
        "topic": "mirrotron-controls/tray/gateGen125/01/reading",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "6e2b0fea88632a49"
            ]
        ]
    },
    {
        "id": "d308f145e243c632",
        "type": "mqtt out",
        "z": "85e21fcb925ef32f",
        "name": "",
        "topic": "mirrotron-controls/tray/gateGen125/01/setting/ping",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 670,
        "y": 1100,
        "wires": []
    },
    {
        "id": "dfab1f40ae1248e3",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Ping timing",
        "func": "msg.payload = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1100,
        "wires": [
            [
                "d308f145e243c632"
            ]
        ]
    },
    {
        "id": "87af1ca5ddc6946d",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1100,
        "wires": [
            [
                "dfab1f40ae1248e3"
            ]
        ]
    },
    {
        "id": "6e2b0fea88632a49",
        "type": "json",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 1220,
        "wires": [
            [
                "ad6b1898f70a05ad"
            ]
        ]
    },
    {
        "id": "ad6b1898f70a05ad",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Store timing",
        "func": "global.set('timing',msg.payload);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1220,
        "wires": []
    }
]